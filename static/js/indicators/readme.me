–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
–ö–∞–∂–¥—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –¥–≤—É–º—è –∫–ª—é—á–µ–≤—ã–º–∏ —á–∞—Å—Ç—è–º–∏:

1. meta
–û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –¥–ª—è UI –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:

js
meta: {
  id: 'rsi',                // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
  name: 'Relative Strength Index', // –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è UI
  position: 'bottom',       // 'top' ‚Äî –ø–æ–≤–µ—Ä—Ö –≥—Ä–∞—Ñ–∏–∫–∞, 'bottom' ‚Äî –ø–æ–¥ –≥—Ä–∞—Ñ–∏–∫–æ–º
  zIndex: 50,               // –ü–æ—Ä—è–¥–æ–∫ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
  height: 100,              // –í—ã—Å–æ—Ç–∞ –ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è bottom)
  defaultParams: {          // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    period: 14,
    color: 0xffffff,
    fillColor: 0x161616,
    levels: [30, 70],       // –£—Ä–æ–≤–Ω–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
    levelColors: [0xFF2E2E, 0x00ff00]
  }
}
2. createIndicator
–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –≥—Ä–∞—Ñ–∏–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ç–æ–¥—ã render –∏ updateHover.

js
createIndicator({ layer, overlay }, layout, params = {}) {
  // layer ‚Äî PIXI.Container –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
  // overlay ‚Äî –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤/–∑–Ω–∞—á–µ–Ω–∏–π –≤ UI
  // layout ‚Äî –≥–µ–æ–º–µ—Ç—Ä–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ (candles, plotW, plotH, indexToX –∏ —Ç.–¥.)
  // params ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Å –¥–µ—Ñ–æ–ª—Ç–∞–º–∏ –∏–∑ meta.defaultParams)

  // –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏–∫—É
  const line     = new PIXI.Graphics();
  const zeroLine = new PIXI.Graphics(); // –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –Ω–æ–ª—å
  const fillArea = new PIXI.Graphics();

  layer.sortableChildren = true;
  fillArea.zIndex  = 0;
  zeroLine.zIndex  = 5;
  line.zIndex      = 10;

  layer.addChild(fillArea, zeroLine, line);

  let values = [];
  let hoverIdx = null;

  // --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, SMA, EMA, stddev) ---
  function sma(values, p) { /* ... */ }
  function ema(values, p) { /* ... */ }

  // --- –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—á—ë—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ ---
  function calculate(data, params) {
    // data = layout.candles
    // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π (—Å null –¥–ª—è –ø—É—Å—Ç—ã—Ö —Ç–æ—á–µ–∫)
  }

  // --- –û—Ç—Ä–∏—Å–æ–≤–∫–∞ ---
  function render(localLayout) {
    const candles = localLayout.candles;
    if (!candles?.length) return;

    values = calculate(candles, params);

    const lastIdx = values.length - 1;
    const lastVal = values[lastIdx];

    line.clear();
    zeroLine.clear();
    fillArea.clear();

    const plotW = localLayout.plotW;
    const plotH = localLayout.plotH;

    // —Ñ–æ–Ω
    fillArea.beginFill(params.fillColor);
    fillArea.drawRect(0, 0, plotW, plotH);
    fillArea.endFill();

    // –ª–∏–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    let started = false;
    line.beginPath();
    for (let i = 0; i < values.length; i++) {
      const val = values[i];
      if (val == null) continue;

      const x = localLayout.indexToX(i);
      if (x < 0) continue;
      if (x > plotW) break;

      const y = plotH / 2 - val * (plotH / 2); // –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –æ—Å—å
      if (!started) { line.moveTo(x, y); started = true; }
      else line.lineTo(x, y);
    }
    if (started) line.stroke({ width: 2, color: params.color });

    // —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è (–Ω–æ–ª—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
    const zeroY = plotH / 2;
    zeroLine.moveTo(0, zeroY);
    zeroLine.lineTo(plotW, zeroY);
    zeroLine.stroke({ width: 0.25, color: 0x555555 });

    // overlay
    if (overlay?.updateParam) {
      overlay.updateParam(params.id ?? 'custom', `${params.period}`);
    }
    if (overlay?.updateValue && values.length) {
      const isHoverLocked = hoverIdx != null && hoverIdx !== lastIdx;
      const val = isHoverLocked ? values[hoverIdx] : lastVal;
      overlay.updateValue(params.id ?? 'custom', val != null ? val.toFixed(2) : '');
    }
  }

  // --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ ---
  function updateHover(candle, idx) {
    if (!overlay?.updateValue || !values?.length) return;
    const lastIdx = values.length - 1;

    if (idx == null || idx < 0 || idx >= values.length) {
      hoverIdx = null;
      const autoVal = values[lastIdx];
      overlay.updateValue(params.id ?? 'custom', autoVal != null ? autoVal.toFixed(2) : '');
      return;
    }

    hoverIdx = idx;
    const v = values[idx];
    overlay.updateValue(params.id ?? 'custom', v != null ? v.toFixed(2) : '');
  }

  return { render, updateHover };
}
üìÑ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä
js
export const myIndicator = {
  meta: {
    id: 'myIndicator',
    name: 'My Custom Line',
    position: 'top',
    zIndex: 70,
    defaultParams: {
      color: 0xffcc00
    }
  },

  createIndicator({ layer }, layout, params = {}) {
    const color = params.color ?? 0xffcc00;
    const line = new PIXI.Graphics();
    layer.addChild(line);

    function render(layout) {
      const candles = layout.candles;
      if (!candles?.length) return;

      line.clear();
      for (let i = 0; i < candles.length; i++) {
        const x = layout.indexToX(i);
        const y = layout.plotH / 2;
        if (i === 0) line.moveTo(x, y);
        else line.lineTo(x, y);
      }
      line.stroke({ width: 2, color });
    }

    return { render };
  }
};
‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥
js
indicators: ['ma', 'rsi', 'volume', 'macd']
–í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ—Ä—É—Ç—Å—è –∏–∑ meta.defaultParams –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞.

üëâ –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –µ–¥–∏–Ω—ã–π —à–∞–±–ª–æ–Ω‚Äë–º–∞–Ω—É–∞–ª:

meta –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä.

createIndicator —Å–æ–∑–¥–∞—ë—Ç –≥—Ä–∞—Ñ–∏–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç render + updateHover.

–í–Ω—É—Ç—Ä–∏ render –≤—Å–µ–≥–¥–∞: –æ—á–∏—Å—Ç–∫–∞ ‚Üí —Ñ–æ–Ω ‚Üí –ª–∏–Ω–∏—è/–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ ‚Üí –Ω—É–ª–µ–≤–∞—è –ª–∏–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞) ‚Üí overlay.